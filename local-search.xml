<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>25.3.13刷题</title>
    <link href="/2025/03/13/25.3.13%E5%88%B7%E9%A2%98/"/>
    <url>/2025/03/13/25.3.13%E5%88%B7%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="P2670-扫雷问题"><a href="#P2670-扫雷问题" class="headerlink" title="P2670 扫雷问题"></a>P2670 扫雷问题</h1><p><a href="https://www.luogu.com.cn/problem/P2670">https://www.luogu.com.cn/problem/P2670</a></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>入门题</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs prolog">#include&lt;bits/stdc++.h&gt;<br>using namespace std;<br><br>const int <span class="hljs-symbol">N</span> = <span class="hljs-number">105</span>;<br>char a[<span class="hljs-symbol">N</span>][<span class="hljs-symbol">N</span>];<br>int ans;<br>int m, n;<br><br>int main()<br>&#123;<br>ios::sync_with_stdio(false);<br>cin.tie(nullptr);<br><br>cin &gt;&gt; n &gt;&gt; m;<br>for (int i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>for (int j = <span class="hljs-number">1</span>; j &lt;= m; j++) &#123;<br>cin &gt;&gt; a[i][j];<br>&#125;<br>&#125;<br><br>for (int i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>for (int j = <span class="hljs-number">1</span>; j &lt;= m; j++) &#123;<br>if (a[i][j] == <span class="hljs-string">&#x27;*&#x27;</span>) &#123;<br>cout &lt;&lt; <span class="hljs-string">&#x27;*&#x27;</span>;<br>continue;<br>&#125;<br>if (a[i - <span class="hljs-number">1</span>][j] == <span class="hljs-string">&#x27;*&#x27;</span>) ans++;<br>if (a[i - <span class="hljs-number">1</span>][j + <span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;*&#x27;</span>) ans++;<br>if (a[i][j + <span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;*&#x27;</span>)ans++;<br>if (a[i + <span class="hljs-number">1</span>][j + <span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;*&#x27;</span>) ans++;<br>if (a[i + <span class="hljs-number">1</span>][j] == <span class="hljs-string">&#x27;*&#x27;</span>) ans++;<br>if (a[i + <span class="hljs-number">1</span>][j - <span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;*&#x27;</span>)ans++;<br>if (a[i][j - <span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;*&#x27;</span>)ans++;<br>if (a[i - <span class="hljs-number">1</span>][j - <span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;*&#x27;</span>)ans++;<br>cout &lt;&lt; ans;<br>ans = <span class="hljs-number">0</span>;<br>&#125;<br>cout &lt;&lt; endl;<br>&#125;<br><br>return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用方向数组 dx dy</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">105</span>;<br><span class="hljs-type">char</span> a[N][N];<br><span class="hljs-type">int</span> dx[<span class="hljs-number">8</span>] = &#123; <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span> &#125;, dy[<span class="hljs-number">8</span>] = &#123; <span class="hljs-number">-1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span> &#125;;<span class="hljs-comment">//方向数组</span><br><span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> m, n;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><br>cin &gt;&gt; n &gt;&gt; m;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt;= m; j++) &#123;<br>cin &gt;&gt; a[i][j];<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt;= m; j++) &#123;<br><span class="hljs-keyword">if</span> (a[i][j] == <span class="hljs-string">&#x27;*&#x27;</span>) &#123;<br>cout &lt;&lt; <span class="hljs-string">&#x27;*&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">8</span>; k++) &#123;<br><span class="hljs-type">int</span> x = i + dx[k], y = j + dy[k];<br><span class="hljs-keyword">if</span> (x &gt;= <span class="hljs-number">1</span> &amp;&amp; x &lt;= n &amp;&amp; y &gt;= <span class="hljs-number">1</span> &amp;&amp; y &lt;= m &amp;&amp; a[x][y] == <span class="hljs-string">&#x27;*&#x27;</span>) ans++;<br>&#125;<br>cout &lt;&lt; ans;<br>ans = <span class="hljs-number">0</span>;<br>&#125;<br><br>&#125;<br>cout &lt;&lt; endl;<br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="P1563-玩具谜题"><a href="#P1563-玩具谜题" class="headerlink" title="P1563 玩具谜题"></a>P1563 玩具谜题</h1><p><a href="https://www.luogu.com.cn/problem/P1563">https://www.luogu.com.cn/problem/P1563</a></p><h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>模拟，朝内向左和朝外向右一样，朝内向右和朝外向左一样。模拟转圈。</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs excel">#include&lt;bits/stdc++.h&gt;<br>using namespace std;<br><br>const <span class="hljs-built_in">int</span> <span class="hljs-built_in">N</span> = <span class="hljs-number">100001</span>;<br><span class="hljs-built_in">int</span> a[<span class="hljs-built_in">N</span>];<br>string name[<span class="hljs-built_in">N</span>];<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span>, m, x, y;<br><span class="hljs-built_in">int</span> <span class="hljs-built_in">t</span> = <span class="hljs-number">1</span>;<br><br><br><span class="hljs-built_in">int</span> main()<br>&#123;<br>i<span class="hljs-symbol">os:</span><span class="hljs-symbol">:sy</span>nc_with_stdio(<span class="hljs-built_in">false</span>);<br>cin.tie(nullptr);<br><br>cin &gt;&gt; <span class="hljs-built_in">n</span> &gt;&gt; m;<br>for (<span class="hljs-built_in">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-built_in">n</span>; i++)cin &gt;&gt; a[i] &gt;&gt; name[i];<br>for (<span class="hljs-built_in">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++) &#123;<br>cin &gt;&gt; x &gt;&gt; y;<br><span class="hljs-built_in">if</span> (a[<span class="hljs-built_in">t</span>] == x) <span class="hljs-built_in">t</span> -= y;<br>else <span class="hljs-built_in">t</span> += y;<br><span class="hljs-built_in">if</span> (<span class="hljs-built_in">t</span> &lt;= <span class="hljs-number">0</span>) <span class="hljs-built_in">t</span> += <span class="hljs-built_in">n</span>;<br>else <span class="hljs-built_in">if</span> (<span class="hljs-built_in">t</span> &gt; <span class="hljs-built_in">n</span>) <span class="hljs-built_in">t</span> -= <span class="hljs-built_in">n</span>;<br>&#125;<br>cout &lt;&lt; name[<span class="hljs-built_in">t</span>];<br><br>return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="P1601-A-B-Problem-高精"><a href="#P1601-A-B-Problem-高精" class="headerlink" title="P1601 A+B Problem (高精)"></a>P1601 A+B Problem (高精)</h1><p><a href="https://www.luogu.com.cn/problem/P1601">https://www.luogu.com.cn/problem/P1601</a></p><h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>高精度加法，模板题。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br>vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">add</span>(vector&lt;<span class="hljs-type">int</span>&gt;&amp;a,vector&lt;<span class="hljs-type">int</span>&gt;&amp;b)<br>&#123;<br>vector&lt;<span class="hljs-type">int</span>&gt; c;<br><span class="hljs-type">int</span> t=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;a.<span class="hljs-built_in">size</span>()||i&lt;b.<span class="hljs-built_in">size</span>();i++)<br>&#123;<br><span class="hljs-keyword">if</span>(i&lt;a.<span class="hljs-built_in">size</span>()) t+=a[i];<br><span class="hljs-keyword">if</span>(i&lt;b.<span class="hljs-built_in">size</span>()) t+=b[i];<br>c.<span class="hljs-built_in">push_back</span>(t%<span class="hljs-number">10</span>);<br>t/=<span class="hljs-number">10</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(t) c.<span class="hljs-built_in">push_back</span>(<span class="hljs-number">1</span>);<br><span class="hljs-keyword">return</span> c;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><br>string A,B;<br>cin&gt;&gt;A&gt;&gt;B;<br>vector&lt;<span class="hljs-type">int</span>&gt; a,b;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=A.<span class="hljs-built_in">length</span>()<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--) a.<span class="hljs-built_in">push_back</span>(A[i]-<span class="hljs-string">&#x27;0&#x27;</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=B.<span class="hljs-built_in">length</span>()<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--) b.<span class="hljs-built_in">push_back</span>(B[i]-<span class="hljs-string">&#x27;0&#x27;</span>);<br>vector&lt;<span class="hljs-type">int</span>&gt;ans=<span class="hljs-built_in">add</span>(a,b);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=ans.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--) cout&lt;&lt;ans[i];<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="P1303-A-B-Problem"><a href="#P1303-A-B-Problem" class="headerlink" title="P1303 A*B Problem"></a>P1303 A*B Problem</h1><p><a href="https://www.luogu.com.cn/problem/P1303">https://www.luogu.com.cn/problem/P1303</a></p><h2 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h2><p>高精度乘法，模板题。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br>vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">mul</span>(vector&lt;<span class="hljs-type">int</span>&gt;&amp; a, vector&lt;<span class="hljs-type">int</span>&gt;&amp; b)<br>&#123;<br><span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">c</span><span class="hljs-params">(a.size()+b.size())</span></span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; a.<span class="hljs-built_in">size</span>(); i++)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; b.<span class="hljs-built_in">size</span>(); j++)<br>&#123;<br>c[i + j] += a[i] * b[j];<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>,t=<span class="hljs-number">0</span>;i&lt;c.<span class="hljs-built_in">size</span>();i++)<br>&#123;<br>t += c[i];<br>c[i] = t % <span class="hljs-number">10</span>;<br>t /= <span class="hljs-number">10</span>;<br>&#125;<br><span class="hljs-keyword">while</span> (c.<span class="hljs-built_in">size</span>() &gt; <span class="hljs-number">1</span> &amp;&amp; c.<span class="hljs-built_in">back</span>() == <span class="hljs-number">0</span>) c.<span class="hljs-built_in">pop_back</span>();<br><span class="hljs-keyword">return</span> c;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><br>string A, B;<br>cin &gt;&gt; A &gt;&gt; B;<br><br>vector&lt;<span class="hljs-type">int</span>&gt; a, b;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = A.<span class="hljs-built_in">length</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) a.<span class="hljs-built_in">push_back</span>(A[i] - <span class="hljs-string">&#x27;0&#x27;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = B.<span class="hljs-built_in">length</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) b.<span class="hljs-built_in">push_back</span>(B[i] - <span class="hljs-string">&#x27;0&#x27;</span>);<br><br>vector&lt;<span class="hljs-type">int</span>&gt;ans = <span class="hljs-built_in">mul</span>(a, b);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = ans.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) cout &lt;&lt; ans[i];<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="P1009-阶乘之和"><a href="#P1009-阶乘之和" class="headerlink" title="P1009 阶乘之和"></a>P1009 阶乘之和</h1><p><a href="https://www.luogu.com.cn/problem/P1009">https://www.luogu.com.cn/problem/P1009</a></p><h2 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a>题解</h2><p>高精度乘法 和 高精度加法</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-comment">//阶乘之和</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">int</span> n;<br><br>vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">add</span>(<span class="hljs-type">const</span> vector&lt;<span class="hljs-type">int</span>&gt;&amp; a, <span class="hljs-type">const</span> vector&lt;<span class="hljs-type">int</span>&gt;&amp; b)<br>&#123;<br>vector&lt;<span class="hljs-type">int</span>&gt;c;<br><span class="hljs-type">int</span> t = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; a.<span class="hljs-built_in">size</span>() || i &lt; b.<span class="hljs-built_in">size</span>(); i++)<br>&#123;<br><span class="hljs-keyword">if</span> (i &lt; a.<span class="hljs-built_in">size</span>()) t += a[i];<br><span class="hljs-keyword">if</span> (i &lt; b.<span class="hljs-built_in">size</span>()) t += b[i];<br>c.<span class="hljs-built_in">push_back</span>(t % <span class="hljs-number">10</span>);<br>t /= <span class="hljs-number">10</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (t) c.<span class="hljs-built_in">push_back</span>(<span class="hljs-number">1</span>);<br><span class="hljs-keyword">return</span> c;<br>&#125;<br><br>vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">mul</span>(vector&lt;<span class="hljs-type">int</span>&gt;&amp; a, vector&lt;<span class="hljs-type">int</span>&gt;&amp; b)<br>&#123;<br><span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">c</span><span class="hljs-params">(a.size() + b.size())</span></span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; a.<span class="hljs-built_in">size</span>(); i++)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; b.<span class="hljs-built_in">size</span>(); j++)<br>c[i + j] += a[i] * b[j];<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>,t=<span class="hljs-number">0</span>; i &lt; c.<span class="hljs-built_in">size</span>(); i++)<br>&#123;<br>t += c[i];<br>c[i] = t % <span class="hljs-number">10</span>;<br>t /= <span class="hljs-number">10</span>;<br>&#125;<br><span class="hljs-keyword">while</span> (c.<span class="hljs-built_in">size</span>() &gt; <span class="hljs-number">1</span> &amp;&amp; c.<span class="hljs-built_in">back</span>() == <span class="hljs-number">0</span>) c.<span class="hljs-built_in">pop_back</span>();<br><span class="hljs-keyword">return</span> c;<br>&#125;<br><br><span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">jiecheng</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br>vector&lt;<span class="hljs-type">int</span>&gt;ans = &#123;<span class="hljs-number">1</span>&#125;;<br>vector&lt;<span class="hljs-type">int</span>&gt;c;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<br>&#123;<br>c.<span class="hljs-built_in">clear</span>();<br><span class="hljs-type">int</span> p = i;<br><span class="hljs-keyword">while</span> (p &gt; <span class="hljs-number">0</span>)<br>&#123;<br>c.<span class="hljs-built_in">push_back</span>(p % <span class="hljs-number">10</span>);<br>p /= <span class="hljs-number">10</span>;<br>&#125;<br>ans = <span class="hljs-built_in">mul</span>(c, ans);<br>&#125;<br><span class="hljs-keyword">return</span> ans;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><br>cin &gt;&gt; n;<br>vector&lt;<span class="hljs-type">int</span>&gt;ans = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<br>&#123;<br>ans = <span class="hljs-built_in">add</span>(ans, <span class="hljs-built_in">jiecheng</span>(i));<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = ans.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) cout &lt;&lt; ans[i];<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法竞赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>刷题</tag>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>牛客周赛round84</title>
    <link href="/2025/03/10/%E7%89%9B%E5%AE%A2%E5%91%A8%E8%B5%9B84/"/>
    <url>/2025/03/10/%E7%89%9B%E5%AE%A2%E5%91%A8%E8%B5%9B84/</url>
    
    <content type="html"><![CDATA[<h1 id="一塌糊涂"><a href="#一塌糊涂" class="headerlink" title="一塌糊涂"></a>一塌糊涂</h1><p><a href="https://ac.nowcoder.com/acm/contest/103152">https://ac.nowcoder.com/acm/contest/103152</a></p><h1 id="还是太菜了"><a href="#还是太菜了" class="headerlink" title="还是太菜了"></a>还是太菜了</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>简单</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">int</span> a[<span class="hljs-number">3</span>];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br>    <br>    <span class="hljs-type">int</span> res=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)<br>    &#123;<br>        cin&gt;&gt;a[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span><span class="hljs-number">-1</span>;i++) res+=<span class="hljs-built_in">abs</span>(a[i<span class="hljs-number">+1</span>]-a[i]);<br>    <span class="hljs-keyword">if</span>(res==<span class="hljs-number">0</span>) cout&lt;&lt;<span class="hljs-string">&quot;Yes\n&quot;</span>;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;No\n&quot;</span>;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>贪心。重新排序，要么从小到大，要么从大到小。两种排法或者元素相同一种排法。最小值就是，最大元素减最小元素的差值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> INF=<span class="hljs-number">1e9</span>;<br><span class="hljs-type">int</span> n;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br>    <br>    cin&gt;&gt;n;<br>    <span class="hljs-type">int</span> mx=-INF,mn=INF;<br>    <span class="hljs-type">int</span> x;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) &#123;<br>        cin&gt;&gt;x;<br>        mx=<span class="hljs-built_in">max</span>(mx,x);<br>        mn=<span class="hljs-built_in">min</span>(mn,x);<br>    &#125;<br>    <br>    mx-=mn;<br>    cout&lt;&lt;(<span class="hljs-number">1</span>+(mx&gt;<span class="hljs-number">0</span>))&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;mx&lt;&lt;endl;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>很简单，暴力。遍历字符串，内层字串长度，依次算；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><br>string s;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br>    <br>    <span class="hljs-type">int</span> n,t;cin&gt;&gt;n&gt;&gt;t;<br>    cin&gt;&gt;s;<br>    <span class="hljs-type">int</span> res=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n-t<span class="hljs-number">+1</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i;j&lt;i+t<span class="hljs-number">-1</span>;j++)&#123;<br>           res+=<span class="hljs-built_in">abs</span>(s[j]-s[j<span class="hljs-number">+1</span>]);<br>        &#125;<br><br>    &#125;<br>    cout&lt;&lt;res;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>C的强化版，数据变大。用<em><strong>前缀和</strong></em>来优化。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><br>string s;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br>    <br>    <span class="hljs-type">int</span> n,k;cin&gt;&gt;n&gt;&gt;k;<br>    cin&gt;&gt;s;<br>    s=<span class="hljs-string">&quot; &quot;</span>+s;<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">sum</span><span class="hljs-params">(n<span class="hljs-number">+1</span>)</span></span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)&#123;<br>        sum[i]=sum[i<span class="hljs-number">-1</span>]+<span class="hljs-built_in">abs</span>(s[i]-s[i<span class="hljs-number">-1</span>]);<br>    &#125;<br>    <br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> ans=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=k;i&lt;=n;i++)&#123;<br>        ans+=(sum[i]-sum[i-k<span class="hljs-number">+1</span>]);<br>    &#125;<br>    cout&lt;&lt;ans&lt;&lt;endl;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><ul><li>树上前缀和 </li><li>树的创建与表示 </li><li>dfs </li><li>lambda表达式</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">v</span><span class="hljs-params">(n<span class="hljs-number">+1</span>,<span class="hljs-number">0</span>)</span></span>;<br>    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">g</span>(n<span class="hljs-number">+1</span>,<span class="hljs-built_in">vector</span>&lt;<span class="hljs-type">int</span>&gt;());<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-type">int</span> x,y;<br>        cin&gt;&gt;x&gt;&gt;y;<br>        g[x].<span class="hljs-built_in">push_back</span>(y);<br>        g[y].<span class="hljs-built_in">push_back</span>(x);<br>    &#125;<br>    <span class="hljs-keyword">auto</span> dfs1 = [&amp;](<span class="hljs-keyword">auto</span>&amp;&amp;self,<span class="hljs-type">int</span> fa,<span class="hljs-type">int</span> node)-&gt;<span class="hljs-type">void</span>&#123;<br>        <span class="hljs-keyword">if</span>(g[node].<span class="hljs-built_in">size</span>()==<span class="hljs-number">1</span>&amp;&amp;fa!=<span class="hljs-number">-1</span>)&#123;<br>            v[node]=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">return</span> ;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> son:g[node])&#123;<br>            <span class="hljs-keyword">if</span>(son==fa)<span class="hljs-keyword">continue</span>;<br>            <span class="hljs-built_in">self</span>(self,node,son);<br>            v[node]+=<span class="hljs-built_in">abs</span>(node-son)+v[son];<br>        &#125;<br>    &#125;;<br>    <span class="hljs-type">int</span> ans=<span class="hljs-number">9e18</span>;<br>    <span class="hljs-keyword">auto</span> dfs2 = [&amp;](<span class="hljs-keyword">auto</span>&amp;&amp;self,<span class="hljs-type">int</span> fa,<span class="hljs-type">int</span> node)-&gt;<span class="hljs-type">void</span>&#123;<br>        <span class="hljs-keyword">if</span>(g[node].<span class="hljs-built_in">size</span>()==<span class="hljs-number">1</span>&amp;&amp;fa!=<span class="hljs-number">-1</span>)&#123;<br>            <span class="hljs-keyword">return</span> ;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> son:g[node])&#123;<br>            <span class="hljs-keyword">if</span>(son==fa)<span class="hljs-keyword">continue</span>;<br>            <span class="hljs-type">int</span> d1=v[son];<br>            <span class="hljs-type">int</span> d2=v[<span class="hljs-number">1</span>]-v[son]-<span class="hljs-built_in">abs</span>(son-node);<br>            ans=<span class="hljs-built_in">min</span>(ans,<span class="hljs-built_in">abs</span>(d1-d2));<br>            <span class="hljs-built_in">self</span>(self,node,son);<br>        &#125;<br>    &#125;;<br>    <span class="hljs-built_in">dfs1</span>(dfs1,<span class="hljs-number">-1</span>,<span class="hljs-number">1</span>);<br>    <span class="hljs-built_in">dfs2</span>(dfs2,<span class="hljs-number">-1</span>,<span class="hljs-number">1</span>);<br>    cout&lt;&lt;ans;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>状态压缩DP，不会······</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">20</span>;<br><span class="hljs-type">int</span> a[N], n, dp[N][<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">20</span>], f[N];<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> ans = <span class="hljs-number">1</span>;<br>    f[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<br>    &#123;<br>        ans = (ans * i) % mod;<br>        f[i] = ans;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">qmi</span><span class="hljs-params">(<span class="hljs-type">int</span> x, <span class="hljs-type">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> cnt = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (y)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (y &amp; <span class="hljs-number">1</span>) cnt = (cnt * x) % mod;<br>        y &gt;&gt;= <span class="hljs-number">1</span>;<br>        x = (x * x) % mod;<br>    &#125;<br>    <span class="hljs-keyword">return</span> cnt;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cin &gt;&gt; n;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)  cin &gt;&gt; a[i];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; (<span class="hljs-number">1</span> &lt;&lt; n); i++)<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; n; j++)<br>        &#123;<br>            <span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>, tmp = i;<br>            <span class="hljs-keyword">if</span> (i &gt;&gt; j &amp; <span class="hljs-number">1</span>)<br>            &#123;<br>                <span class="hljs-keyword">while</span> (tmp)<br>                &#123;<br>                    <span class="hljs-keyword">if</span> (tmp &amp; <span class="hljs-number">1</span>) cnt++;<br>                    tmp &gt;&gt;= <span class="hljs-number">1</span>;<br>                &#125;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>; k &lt; n; k++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span> ((i &gt;&gt; k) &amp; <span class="hljs-number">1</span>) <span class="hljs-keyword">continue</span>;<br>                    dp[k][i | (<span class="hljs-number">1</span> &lt;&lt; k)] += (dp[j][i] + <span class="hljs-built_in">abs</span>(a[j] - a[k]) * f[cnt - <span class="hljs-number">1</span>] % mod) % mod;<br>                    dp[k][i | (<span class="hljs-number">1</span> &lt;&lt; k)] %= mod;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>    &#123;<br>        ans = (ans + dp[i][(<span class="hljs-number">1</span> &lt;&lt; n) - <span class="hljs-number">1</span>]) % mod;<br>    &#125;<br>    cout &lt;&lt; (ans * (<span class="hljs-built_in">qmi</span>(f[n], mod - <span class="hljs-number">2</span>))) % mod &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>加权逆序对?不会······</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-meta">#include&lt;bits/stdc++.h&gt;</span><br><span class="hljs-meta">#define int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">int</span> <span class="hljs-keyword">mod</span>=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-built_in">int</span> ksm(<span class="hljs-built_in">int</span> a,<span class="hljs-built_in">int</span> b)<br>&#123;<br>    <span class="hljs-built_in">int</span> ans=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(b)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(b%<span class="hljs-number">2</span>)ans=ans*a%<span class="hljs-keyword">mod</span>;<br>        a=a*a%<span class="hljs-keyword">mod</span>;<br>        b/=<span class="hljs-number">2</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> ans;<br>&#125;<br><span class="hljs-keyword">void</span> solve()<br>&#123;<br>    <span class="hljs-built_in">int</span> n;<br>    cin&gt;&gt;n;<br>    vector&lt;<span class="hljs-built_in">int</span>&gt;a(n+<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];<br>    sort(a.begin()+<span class="hljs-number">1</span>,a.end());<br>    <span class="hljs-built_in">int</span> ans=<span class="hljs-number">0</span>,<span class="hljs-keyword">sum</span>=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    &#123;<br>        ans+=a[i]*(i<span class="hljs-number">-1</span>)-<span class="hljs-keyword">sum</span>;<br>        ans=(ans%<span class="hljs-keyword">mod</span>+<span class="hljs-keyword">mod</span>)%<span class="hljs-keyword">mod</span>;<br>        <span class="hljs-keyword">sum</span>+=a[i];<br>        <span class="hljs-keyword">sum</span>%=<span class="hljs-keyword">mod</span>;<br>    &#125;<br>    ans=ans*<span class="hljs-number">2</span>%<span class="hljs-keyword">mod</span>;<br>    <span class="hljs-comment">//ans*=ksm(n,mod-2)%mod;</span><br>    cout&lt;&lt;ans*ksm(n,<span class="hljs-keyword">mod</span><span class="hljs-number">-2</span>)%<span class="hljs-keyword">mod</span>;<br>&#125;<br>signed main()<br>&#123;<br>    ios::sync_with_stdio(<span class="hljs-number">0</span>),cin.tie(<span class="hljs-number">0</span>),cout.tie(<span class="hljs-number">0</span>);<br>    solve();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>牛客周赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>刷题</tag>
      
      <tag>算法</tag>
      
      <tag>竞赛</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>25.3.9刷题</title>
    <link href="/2025/03/09/25.3.9%E5%88%B7%E9%A2%98/"/>
    <url>/2025/03/09/25.3.9%E5%88%B7%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="P3375-【模板】KMP"><a href="#P3375-【模板】KMP" class="headerlink" title="P3375 【模板】KMP"></a>P3375 【模板】KMP</h1><p><a href="https://www.luogu.com.cn/problem/P3375">https://www.luogu.com.cn/problem/P3375</a></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>kmp算法模板，输出匹配开始位置，最后再输出next数组</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">1000010</span>;<br>string s,p;<br><span class="hljs-type">int</span> ne[N];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br>    s=<span class="hljs-string">&quot; &quot;</span>,p=<span class="hljs-string">&quot; &quot;</span>;<br>    string s1,p1;<br>    cin&gt;&gt;s1&gt;&gt;p1;<br>    s+=s1,p+=p1;<br>    <span class="hljs-type">int</span> lens=s.<span class="hljs-built_in">length</span>()<span class="hljs-number">-1</span>;<br>    <span class="hljs-type">int</span> lenp=p.<span class="hljs-built_in">length</span>()<span class="hljs-number">-1</span>;<br>    <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>,j=<span class="hljs-number">0</span>;i&lt;=lenp;i++)<br>        &#123;<br>            <span class="hljs-keyword">while</span>(j&amp;&amp;p[i]!=p[j<span class="hljs-number">+1</span>]) j=ne[j];<br>            <span class="hljs-keyword">if</span>(p[j<span class="hljs-number">+1</span>]==p[i]) j++;<br>            ne[i]=j;<br>        &#125;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>,j=<span class="hljs-number">0</span>;i&lt;=lens;i++)<br>        &#123;<br>            <span class="hljs-keyword">while</span>(j&amp;&amp;s[i]!=p[j<span class="hljs-number">+1</span>]) j=ne[j];<br>            <span class="hljs-keyword">if</span>(s[i]==p[j<span class="hljs-number">+1</span>]) j++;<br>            <span class="hljs-keyword">if</span>(j==lenp)<br>            &#123;<br>                cout&lt;&lt;i-lenp<span class="hljs-number">+1</span>&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>                j=ne[j];<br>            &#125;<br>        &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=lenp;i++) cout&lt;&lt;ne[i]&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="P1507-NASA的食物计划"><a href="#P1507-NASA的食物计划" class="headerlink" title="P1507 NASA的食物计划"></a>P1507 NASA的食物计划</h1><p><a href="https://www.luogu.com.cn/problem/P1507">https://www.luogu.com.cn/problem/P1507</a></p><h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>01背包的变形，限制条件变成了两个：体积、质量。</p><p>只需开个二维dp[i][j]数组，第一个下标代表体积，第二个下标代表质量。表示体积最大为i的情况下，重量最大为j时的最大价值</p><p>状态转移方程：dp[j][l] &#x3D; max(dp[j][l], dp[j - h1[i]][l - t1[i]] + k[i])</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">405</span>,M=<span class="hljs-number">51</span>;<br><span class="hljs-type">int</span> h, t;<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">int</span> h1[M], t1[M], k[M];<br><span class="hljs-type">int</span> dp[N][N];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><br>cin &gt;&gt; h &gt;&gt; t;<br>cin &gt;&gt; n;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<span class="hljs-comment">//遍历每个物品，选还是不选</span><br>&#123;<br>cin &gt;&gt; h1[i] &gt;&gt; t1[i] &gt;&gt; k[i];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = h; j &gt;= h1[i]; j--)<span class="hljs-comment">//倒序遍历体积，防止重复</span><br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> l = t; l &gt;= t1[i]; l--)<span class="hljs-comment">//倒序遍历质量，防止重复</span><br>&#123;<br>dp[j][l] = <span class="hljs-built_in">max</span>(dp[j][l], dp[j - h1[i]][l - t1[i]] + k[i]);<br>&#125;<br>&#125;<br>&#125;<br>cout &lt;&lt; dp[h][t];<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="P1470-最长前缀-Longest-Prefix"><a href="#P1470-最长前缀-Longest-Prefix" class="headerlink" title="P1470 最长前缀 Longest Prefix"></a>P1470 最长前缀 Longest Prefix</h1><p><a href="https://www.luogu.com.cn/problem/P1470">https://www.luogu.com.cn/problem/P1470</a></p><h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>dp问题。dp[i]表示从1到i的前缀字符串是否可以用p拼接.</p><p>状态转移：if(h.count(t)&amp;&amp;dp[i-j]) dp[i]&#x3D;true;  如果从1到i-j可以表示，且i-j到i在p中存在，那么dp[i]也可以表示</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span>  <span class="hljs-type">int</span> N = <span class="hljs-number">200010</span>;<br><span class="hljs-type">int</span> max1 = <span class="hljs-number">0</span>;<br>string s, x;<br>unordered_set&lt;string&gt; h;<br><span class="hljs-type">int</span> dp[N];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><br><span class="hljs-keyword">while</span> (cin &gt;&gt; s, s != <span class="hljs-string">&quot;.&quot;</span>)<span class="hljs-comment">//读取输入</span><br>&#123;<br>h.<span class="hljs-built_in">insert</span>(s);<br>max1 = <span class="hljs-built_in">max</span>(max1, (<span class="hljs-type">int</span>)s.<span class="hljs-built_in">size</span>());<span class="hljs-comment">//存最大长度</span><br>&#125;<br>s = <span class="hljs-string">&quot; &quot;</span>;<span class="hljs-comment">//先初始一个字符，便于从1开始遍历</span><br><span class="hljs-keyword">while</span> (cin &gt;&gt; x) s += x;<span class="hljs-comment">//读取字符串，可以有多行</span><br>dp[<span class="hljs-number">0</span>] = <span class="hljs-literal">true</span>;<span class="hljs-comment">//初始dp[0]合法</span><br><span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; s.<span class="hljs-built_in">size</span>(); i++)<span class="hljs-comment">//遍历字符串</span><br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-built_in">min</span>(max1, i); j &gt;= <span class="hljs-number">1</span>; j--)<br>&#123;<br>string t = s.<span class="hljs-built_in">substr</span>(i - j + <span class="hljs-number">1</span>, j);<br><span class="hljs-keyword">if</span> (h.<span class="hljs-built_in">count</span>(t) &amp;&amp; dp[i - j])<br>&#123;<br>dp[i] = <span class="hljs-literal">true</span>;<br>ans = i;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br>cout &lt;&lt; ans;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法竞赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动态规划</tag>
      
      <tag>刷题</tag>
      
      <tag>算法</tag>
      
      <tag>KMP算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>25.3.8刷题</title>
    <link href="/2025/03/08/25.3.8%E5%88%B7%E9%A2%98/"/>
    <url>/2025/03/08/25.3.8%E5%88%B7%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="P1203-坏掉的项链"><a href="#P1203-坏掉的项链" class="headerlink" title="P1203 坏掉的项链"></a>P1203 坏掉的项链</h1><p><a href="https://www.luogu.com.cn/problem/P1203">https://www.luogu.com.cn/problem/P1203</a></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>用暴力搜素。关于字符串的操作：substr、erase、reverse</p><p>字符串是个环，处理方法：再复制一份</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br>string s,s1,s2;<br><span class="hljs-type">int</span> ans,ans1;<br><span class="hljs-type">int</span> n;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">search</span><span class="hljs-params">(<span class="hljs-type">int</span> a)</span></span><br><span class="hljs-function"></span>&#123;<br>    s1=s.<span class="hljs-built_in">substr</span>(a);<span class="hljs-comment">//取a之后的子串</span><br>    s1+=s;<span class="hljs-comment">//再复制，相当于环</span><br>    s<span class="hljs-number">1.</span><span class="hljs-built_in">erase</span>(n);<span class="hljs-comment">//删除n之后的字符</span><br>    s2=s1;<span class="hljs-comment">//再复制一个给s2</span><br>    <span class="hljs-built_in">reverse</span>(s<span class="hljs-number">2.</span><span class="hljs-built_in">begin</span>(),s<span class="hljs-number">2.</span><span class="hljs-built_in">end</span>());<span class="hljs-comment">//s2反转，相当于倒着遍历</span><br>    <span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(s1[j]==<span class="hljs-string">&#x27;w&#x27;</span>)<span class="hljs-comment">//第一个不是w的字符</span><br>        &#123;<br>            ans++;<br>            j++;<br>        &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=j;i&lt;n;i++)<span class="hljs-comment">//遍历</span><br>    &#123;<br>        <span class="hljs-keyword">if</span>(s1[i]==s1[j]||s1[i]==<span class="hljs-string">&#x27;w&#x27;</span>)<br>        &#123;<br>            ans++;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">break</span>;<br>    &#125;<br>    j=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(s2[j]==<span class="hljs-string">&#x27;w&#x27;</span>) ans++,j++;<span class="hljs-comment">//另一方向，第一个不是w的字符</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=j;i&lt;n;i++)<span class="hljs-comment">//遍历</span><br>        &#123;<br>            <span class="hljs-keyword">if</span>(s2[i]==s2[j]||s2[i]==<span class="hljs-string">&#x27;w&#x27;</span>) ans++;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">break</span>;<br>        &#125;<br>    ans1=<span class="hljs-built_in">max</span>(ans1,ans);<span class="hljs-comment">//记录当前最大的结果</span><br>    ans=<span class="hljs-number">0</span>;<span class="hljs-comment">//每次结束要把ans清零</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><br>    cin&gt;&gt;n&gt;&gt;s;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) <span class="hljs-built_in">search</span>(i);<br>    ans=<span class="hljs-built_in">min</span>(ans1,n);<span class="hljs-comment">//不能超过字符总长度</span><br>    cout&lt;&lt;ans;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="P1507-NASA的食物计划"><a href="#P1507-NASA的食物计划" class="headerlink" title="P1507 NASA的食物计划"></a>P1507 NASA的食物计划</h1><p><a href="https://www.luogu.com.cn/problem/P1507">https://www.luogu.com.cn/problem/P1507</a></p><h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>01背包的变形，限制条件变成了两个：体积、质量。</p><p>只需开个二维dp[i][j]数组，第一个下标代表体积，第二个下标代表质量。表示体积最大为i的情况下，重量最大为j时的最大价值</p><p>状态转移方程：dp[j][l] &#x3D; max(dp[j][l], dp[j - h1[i]][l - t1[i]] + k[i])</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">405</span>,M=<span class="hljs-number">51</span>;<br><span class="hljs-type">int</span> h, t;<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">int</span> h1[M], t1[M], k[M];<br><span class="hljs-type">int</span> dp[N][N];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><br>cin &gt;&gt; h &gt;&gt; t;<br>cin &gt;&gt; n;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<span class="hljs-comment">//遍历每个物品，选还是不选</span><br>&#123;<br>cin &gt;&gt; h1[i] &gt;&gt; t1[i] &gt;&gt; k[i];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = h; j &gt;= h1[i]; j--)<span class="hljs-comment">//倒序遍历体积，防止重复</span><br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> l = t; l &gt;= t1[i]; l--)<span class="hljs-comment">//倒序遍历质量，防止重复</span><br>&#123;<br>dp[j][l] = <span class="hljs-built_in">max</span>(dp[j][l], dp[j - h1[i]][l - t1[i]] + k[i]);<br>&#125;<br>&#125;<br>&#125;<br>cout &lt;&lt; dp[h][t];<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="P1470-最长前缀-Longest-Prefix"><a href="#P1470-最长前缀-Longest-Prefix" class="headerlink" title="P1470 最长前缀 Longest Prefix"></a>P1470 最长前缀 Longest Prefix</h1><p><a href="https://www.luogu.com.cn/problem/P1470">https://www.luogu.com.cn/problem/P1470</a></p><h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>dp问题。dp[i]表示从1到i的前缀字符串是否可以用p拼接.</p><p>状态转移：if(h.count(t)&amp;&amp;dp[i-j]) dp[i]&#x3D;true;  如果从1到i-j可以表示，且i-j到i在p中存在，那么dp[i]也可以表示</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span>  <span class="hljs-type">int</span> N = <span class="hljs-number">200010</span>;<br><span class="hljs-type">int</span> max1 = <span class="hljs-number">0</span>;<br>string s, x;<br>unordered_set&lt;string&gt; h;<br><span class="hljs-type">int</span> dp[N];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><br><span class="hljs-keyword">while</span> (cin &gt;&gt; s, s != <span class="hljs-string">&quot;.&quot;</span>)<span class="hljs-comment">//读取输入</span><br>&#123;<br>h.<span class="hljs-built_in">insert</span>(s);<br>max1 = <span class="hljs-built_in">max</span>(max1, (<span class="hljs-type">int</span>)s.<span class="hljs-built_in">size</span>());<span class="hljs-comment">//存最大长度</span><br>&#125;<br>s = <span class="hljs-string">&quot; &quot;</span>;<span class="hljs-comment">//先初始一个字符，便于从1开始遍历</span><br><span class="hljs-keyword">while</span> (cin &gt;&gt; x) s += x;<span class="hljs-comment">//读取字符串，可以有多行</span><br>dp[<span class="hljs-number">0</span>] = <span class="hljs-literal">true</span>;<span class="hljs-comment">//初始dp[0]合法</span><br><span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; s.<span class="hljs-built_in">size</span>(); i++)<span class="hljs-comment">//遍历字符串</span><br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-built_in">min</span>(max1, i); j &gt;= <span class="hljs-number">1</span>; j--)<br>&#123;<br>string t = s.<span class="hljs-built_in">substr</span>(i - j + <span class="hljs-number">1</span>, j);<br><span class="hljs-keyword">if</span> (h.<span class="hljs-built_in">count</span>(t) &amp;&amp; dp[i - j])<br>&#123;<br>dp[i] = <span class="hljs-literal">true</span>;<br>ans = i;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br>cout &lt;&lt; ans;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法竞赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动态规划</tag>
      
      <tag>刷题</tag>
      
      <tag>算法</tag>
      
      <tag>暴力搜索</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>25.3.7刷题</title>
    <link href="/2025/03/07/25.3.7%E5%88%B7%E9%A2%98/"/>
    <url>/2025/03/07/25.3.7%E5%88%B7%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="P1049-装箱问题"><a href="#P1049-装箱问题" class="headerlink" title="P1049 装箱问题"></a>P1049 装箱问题</h1><p><a href="https://www.luogu.com.cn/problem/P1049">https://www.luogu.com.cn/problem/P1049</a></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>将每个物品的体积当作价值，就转换成了01背包。最后输出背包容量-最大价值（即最大体积）。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">20010</span>;<br><span class="hljs-type">int</span> v[N];<br><span class="hljs-type">int</span> dp[N];<br><span class="hljs-type">int</span> n,m;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br>cin &gt;&gt; n &gt;&gt; m;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++)<br>&#123;<br>cin &gt;&gt; v[i];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = n; j &gt;= v[i]; j--)<br>&#123;<br>dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - v[i]]+v[i]);<br>&#125;<br>&#125;<br><br>cout &lt;&lt; n - dp[n];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="P1757-通天之分组背包"><a href="#P1757-通天之分组背包" class="headerlink" title="P1757 通天之分组背包"></a>P1757 通天之分组背包</h1><p><a href="https://www.luogu.com.cn/problem/P1757">https://www.luogu.com.cn/problem/P1757</a></p><h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>分组背包模板，记录下输入和分组数，剩下背模板</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs inform7">#include&lt;bits/stdc++.h&gt;<br>using namespace std;<br><br>const int N = 1010, M = 110;<br>int a, b, c;<br>int n, m;<br>int v<span class="hljs-comment">[N]</span><span class="hljs-comment">[N]</span>, w<span class="hljs-comment">[N]</span><span class="hljs-comment">[N]</span>;<br>int cntc<span class="hljs-comment">[N]</span>;<br>int dp<span class="hljs-comment">[N]</span>;<br>int k;<br><br>int main()<br>&#123;<br>ios::sync_with_stdio(false);<br>cin.tie(nullptr);<br><br>cin &gt;&gt; m &gt;&gt; n;<br>for (int i = 1; i &lt;= n; i++)<br>&#123;<br>cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;<br>cntc<span class="hljs-comment">[c]</span>++;<br>v<span class="hljs-comment">[c]</span><span class="hljs-comment">[cntc<span class="hljs-comment">[c]</span>]</span> = a;<br>w<span class="hljs-comment">[c]</span><span class="hljs-comment">[cntc<span class="hljs-comment">[c]</span>]</span> = b;<br>&#125;<br><br>for (int i = 1; i &lt;= n; i++)<br>&#123;<br>if (cntc<span class="hljs-comment">[i]</span> != 0) k++;<br>&#125;<br><br>for (int i = 1; i &lt;= k; i++)<br>&#123;<br>for (int j = m; j &gt;= 0; j--)<br>&#123;<br>for (int k = 1; k &lt;= cntc<span class="hljs-comment">[i]</span>; k++)<br>&#123;<br>if (v<span class="hljs-comment">[i]</span><span class="hljs-comment">[k]</span> &lt;= j)<br>&#123;<br>dp<span class="hljs-comment">[j]</span> = max(dp<span class="hljs-comment">[j]</span>, dp<span class="hljs-comment">[j - v<span class="hljs-comment">[i]</span><span class="hljs-comment">[k]</span>]</span> + w<span class="hljs-comment">[i]</span><span class="hljs-comment">[k]</span>);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><br>cout &lt;&lt; dp<span class="hljs-comment">[m]</span>;<br><br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="P1832-A-B-Problem-再升级"><a href="#P1832-A-B-Problem-再升级" class="headerlink" title="P1832 A+B Problem(再升级)"></a>P1832 A+B Problem(再升级)</h1><p><a href="https://www.luogu.com.cn/problem/P1832">https://www.luogu.com.cn/problem/P1832</a></p><h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><p>线性筛法，筛出质数。转换成完全背包问题，每个素数可以无限选，背包容量为n。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1010</span>;<br><span class="hljs-type">int</span> primes[N], cnt;<br><span class="hljs-type">bool</span> st[N];<br><br><span class="hljs-type">int</span> n;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span>  dp[N];<span class="hljs-comment">//需要开long long </span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">get_primes</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span><span class="hljs-comment">//线性筛法</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt;= n; i++)<br>&#123;<br><span class="hljs-keyword">if</span> (!st[i]) primes[cnt++] = i;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; primes[j] &lt;= n / i; j++)<br>&#123;<br>st[primes[j] * i] = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">if</span>(i%primes[j]==<span class="hljs-number">0</span>) <span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><br>cin &gt;&gt; n;<br><span class="hljs-built_in">get_primes</span>(n);<br><br><br>dp[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; cnt; i++)<span class="hljs-comment">//素数个数</span><br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = primes[i]; j &lt;= n; j++)<br>&#123;<br>dp[j] +=dp[j-primes[i]];<span class="hljs-comment">//选上这个素数的方案数+=不选这个素数的方案数</span><br>&#125;<br>&#125;<br>cout &lt;&lt; dp[n];<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法竞赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动态规划</tag>
      
      <tag>刷题</tag>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>25.3.6刷题</title>
    <link href="/2025/03/07/25.3.6%E5%88%B7%E9%A2%98/"/>
    <url>/2025/03/07/25.3.6%E5%88%B7%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1048">https://www.luogu.com.cn/problem/P1048</a></p><h1 id="P1048-采药"><a href="#P1048-采药" class="headerlink" title="P1048 采药"></a>P1048 采药</h1><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>01背包，纯模板</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1010</span>;<br><span class="hljs-type">int</span> v[N],w[N];<br><span class="hljs-type">int</span> dp[N];<br><span class="hljs-type">int</span> n,m;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br>cin &gt;&gt; m &gt;&gt; n;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) cin &gt;&gt; v[i]&gt;&gt;w[i];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = m; j &gt;= v[i]; j--)<br>&#123;<br>dp[j] = <span class="hljs-built_in">max</span>(dp[j], dp[j - v[i]] + w[i]);<br>&#125;<br>&#125;<br>cout &lt;&lt; dp[m];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法竞赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动态规划</tag>
      
      <tag>刷题</tag>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>25.3.5刷题</title>
    <link href="/2025/03/06/25.3.5%E5%88%B7%E9%A2%98/"/>
    <url>/2025/03/06/25.3.5%E5%88%B7%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1802">https://www.luogu.com.cn/problem/P1802</a></p><h1 id="P1802-5倍经验日"><a href="#P1802-5倍经验日" class="headerlink" title="P1802 5倍经验日"></a>P1802 5倍经验日</h1><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>01背包的变形，<em>不选择也会有增加值</em></p><p>拥有药水数量就是背包容量，每种物品有两种价值，注意状态转移方程，还有不选择物品时，也会增加价值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1010</span>;<br><span class="hljs-type">int</span> n, m;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> dp[N];<br><span class="hljs-type">int</span> lose[N], win[N], use[N];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><br>cin &gt;&gt; n &gt;&gt; m;<span class="hljs-comment">//处理输入</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) cin &gt;&gt; lose[i] &gt;&gt; win[i] &gt;&gt; use[i];<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<span class="hljs-comment">//01背包</span><br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = m; j &gt;= use[i]; j--)<br>&#123;<br>dp[j] = <span class="hljs-built_in">max</span>(dp[j] + lose[i], dp[j - use[i]] + win[i]);<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = use[i] - <span class="hljs-number">1</span>; j &gt;= <span class="hljs-number">0</span>; j--)<span class="hljs-comment">//药水数量不够，输了也会加经验，所以，小于药水需要量的情况都要加lose[i]</span><br>&#123;<br>dp[j] += lose[i];<br>&#125;<br>&#125;<br><br>cout &lt;&lt; <span class="hljs-number">5</span> * dp[m];<span class="hljs-comment">//输出，答案可能爆int，所以用long long</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法竞赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动态规划</tag>
      
      <tag>刷题</tag>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>25.3.3刷题</title>
    <link href="/2025/03/04/25.3.3%E5%88%B7%E9%A2%98/"/>
    <url>/2025/03/04/25.3.3%E5%88%B7%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1359">https://www.luogu.com.cn/problem/P1359</a></p><h1 id="P1359-租用游艇"><a href="#P1359-租用游艇" class="headerlink" title="P1359 租用游艇"></a>P1359 租用游艇</h1><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>简单的动态规划，a[i][j]存在下标i借到下标j还的费用，一维dp[i]数组存到下标i归还的最小花费，状态转移方程：dp[i]&#x3D;min(dp[i],dp[j]+a[j][i])</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">210</span>;<br><span class="hljs-type">int</span> a[N][N];<br><span class="hljs-type">int</span> dp[N];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><span class="hljs-type">int</span> n; cin &gt;&gt; n;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i++)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = i + <span class="hljs-number">1</span>; j &lt;= n; j++)<br>&#123;<br>cin &gt;&gt; a[i][j];<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt;= n; i++)<br>&#123;<br>dp[i] = a[<span class="hljs-number">1</span>][i];<br>&#125;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">3</span>; i &lt;= n; i++)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">2</span>; j &lt; i; j++)<br>&#123;<br>dp[i] = <span class="hljs-built_in">min</span>(dp[i], dp[j] + a[j][i]);<br>&#125;<br>&#125;<br><br>cout &lt;&lt; dp[n];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法竞赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动态规划</tag>
      
      <tag>刷题</tag>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>传智杯</title>
    <link href="/2025/03/03/%E4%BC%A0%E6%99%BA%E6%9D%AF/"/>
    <url>/2025/03/03/%E4%BC%A0%E6%99%BA%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="一塌糊涂"><a href="#一塌糊涂" class="headerlink" title="一塌糊涂"></a>一塌糊涂</h1><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><code class="hljs nim">/*<br><span class="hljs-comment">#include &lt;bits/stdc++.h&gt;</span><br><span class="hljs-keyword">using</span> namespace std;<br><span class="hljs-keyword">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">2010</span>;<br><br><span class="hljs-type">int</span> l, r;<br><br><span class="hljs-type">int</span> main()<br>&#123;<br>    ios::sync_with_stdio(<span class="hljs-literal">false</span>);<br>    cin.tie(nullptr);<br>    <span class="hljs-type">int</span> tt; cin &gt;&gt; tt;<br>    <span class="hljs-keyword">while</span> (tt--)<br>    &#123;<br>        cin &gt;&gt; l &gt;&gt; r;<br>        <span class="hljs-type">int</span> flag = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = l; i &lt;= r; i++)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (i % <span class="hljs-number">3</span> == <span class="hljs-number">0</span>)<br>            &#123;<br>                cout &lt;&lt; <span class="hljs-string">&quot;YES\n&quot;</span>;<br>                flag = <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (flag == <span class="hljs-number">0</span>) cout &lt;&lt; <span class="hljs-string">&quot;NO\n&quot;</span>;<br><br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;*/<br><br><br>/*<br><span class="hljs-comment">#include &lt;bits/stdc++.h&gt;</span><br><span class="hljs-keyword">using</span> namespace std;<br><span class="hljs-keyword">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">200010</span>, M = <span class="hljs-number">1000000005</span>;<br><span class="hljs-type">int</span> a[N];<br><span class="hljs-type">int</span> n, q;<br><span class="hljs-type">int</span> l, r;<br><br><span class="hljs-type">int</span> f[N];<br><br><span class="hljs-type">bool</span> s[M];<br><br><span class="hljs-type">int</span> <span class="hljs-keyword">func</span>(<span class="hljs-type">int</span> n) &#123;                 //超时，判断好数直接循环，不会优化<br>    <span class="hljs-keyword">if</span> (n % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-type">int</span> x = n;<br>    <span class="hljs-type">int</span> res = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt;= x / i; i++) &#123;<br>        <span class="hljs-keyword">if</span> (!s[i])<br>        &#123;<br>            res += i;<br>            s[i] = <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">if</span> (x / i != i)<br>                res += x / i, s[x / i] = <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> ((res * n) % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">int</span> main() &#123;<br>    ios::sync_with_stdio(<span class="hljs-literal">false</span>);<br>    cin.tie(nullptr);<br>    <span class="hljs-type">int</span> tt;<br>    cin &gt;&gt; tt;<br>    <span class="hljs-keyword">while</span> (tt--) &#123;<br>        cin &gt;&gt; n &gt;&gt; q;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>            cin &gt;&gt; a[i];<br>            <span class="hljs-type">int</span> res = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">func</span>(a[i]) == <span class="hljs-number">1</span>) f[i] = f[i - <span class="hljs-number">1</span>] + <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">else</span> f[i] = f[i - <span class="hljs-number">1</span>];<br>        &#125;<br>  <br><br>        <span class="hljs-keyword">while</span> (q--) &#123;<br><br>            cin &gt;&gt; l &gt;&gt; r;<br>            <span class="hljs-type">int</span> res = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">if</span> (l != <span class="hljs-number">1</span>)<br>                res = f[r] - f[l];<br>            <span class="hljs-keyword">else</span> res = f[r];<br>            cout &lt;&lt; res &lt;&lt; &#x27;\n&#x27;;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;*/<br><br><span class="hljs-comment">#include&lt;bits/stdc++.h&gt;</span><br><span class="hljs-keyword">using</span> namespace std;<br><span class="hljs-keyword">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">5010</span>;<br><span class="hljs-type">int</span> n, k;<br><span class="hljs-type">char</span> str[N];<br><span class="hljs-type">int</span> main()<br>&#123;<br>    ios::sync_with_stdio(<span class="hljs-literal">false</span>);<br>    cin.tie(nullptr);<br>    <span class="hljs-type">int</span> tt; cin &gt;&gt; tt;<br>    <span class="hljs-keyword">while</span> (tt--)<br>    &#123;<br>        cin &gt;&gt; n &gt;&gt; k;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) cin &gt;&gt; str[i];<br><br>    &#125;<br>&#125;<br><br>/*<br><span class="hljs-comment">#include &lt;bits/stdc++.h&gt;</span><br><span class="hljs-keyword">using</span> namespace std;<br><span class="hljs-keyword">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">200010</span>;<br><span class="hljs-type">int</span> n, m, k;<br><span class="hljs-type">int</span> a[N];<br><br><br><span class="hljs-type">int</span> main() &#123;<br>    ios::sync_with_stdio(<span class="hljs-literal">false</span>);<br>    cin.tie(nullptr);<br>    <span class="hljs-type">int</span> tt;<br>    cin &gt;&gt; tt;<br>    <span class="hljs-keyword">while</span> (tt--) &#123;<br>        cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i];<br><br>        <span class="hljs-keyword">while</span> (k) &#123;<br>            sort(a + <span class="hljs-number">1</span>, a + n);<br>            <span class="hljs-type">int</span> res = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt;= n; i++) &#123;<br>                <span class="hljs-keyword">if</span> (a[<span class="hljs-number">1</span>] &lt; a[i] &amp;&amp; (a[i] - a[<span class="hljs-number">1</span>]) &lt;= k) &#123;<br>                    res = a[i] - a[<span class="hljs-number">1</span>];<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>            &#125;<br>            a[<span class="hljs-number">1</span>] += res;<br>            k -= res;<br>        &#125;<br>        <span class="hljs-keyword">while</span> (m) &#123;<br>            sort(a + <span class="hljs-number">1</span>, a + n);<br>            <span class="hljs-keyword">if</span> (a[n] == a[<span class="hljs-number">1</span>]) <span class="hljs-keyword">break</span>;<br>            <span class="hljs-type">int</span> k = <span class="hljs-number">2</span>;<br>            <span class="hljs-type">int</span> res = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt; n; i++) &#123;<br>                <span class="hljs-keyword">if</span> (a[<span class="hljs-number">1</span>] &lt; a[i] &amp;&amp; (a[i] - a[<span class="hljs-number">1</span>]) &lt;= k) &#123;<br>                    res = a[i] - a[<span class="hljs-number">1</span>];<br>                    k = i;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (a[n] - a[k] &gt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-type">int</span> t = a[n] = a[k];<br>                m -= t;<br>                a[<span class="hljs-number">1</span>] += t;<br>                a[n] -= t;<br>            &#125;<br>        &#125;<br><br><br>        cout &lt;&lt; a[<span class="hljs-number">1</span>] &lt;&lt; &#x27;\n&#x27;;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>*/<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法竞赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>刷题</tag>
      
      <tag>算法</tag>
      
      <tag>竞赛</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>new_english</title>
    <link href="/2025/03/02/new-english/"/>
    <url>/2025/03/02/new-english/</url>
    
    <content type="html"><![CDATA[<h1 id="新概念英语"><a href="#新概念英语" class="headerlink" title="新概念英语"></a>新概念英语</h1><p>Last week I went to the theatre. I had a very good seat. The play was very interesting.</p>]]></content>
    
    
    <categories>
      
      <category>english</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>bounded_knapsack</title>
    <link href="/2025/03/01/bounded-knapsack/"/>
    <url>/2025/03/01/bounded-knapsack/</url>
    
    <content type="html"><![CDATA[<h1 id="完全背包"><a href="#完全背包" class="headerlink" title="完全背包"></a>完全背包</h1><h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><p>有 N 种物品和一个容量是 V 的背包。</p><p>第 i 种物品最多有 si 件，每件体积是 vi，价值是 wi。</p><p>求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。<br>输出最大价值。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。</p><p>接下来有 N 行，每行三个整数 vi,wi,si，用空格隔开，分别表示第 i 种物品的体积、价值和数量。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示最大价值。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>0&lt;N≤1000<br>0&lt;V≤2000<br>0&lt;vi,wi,si≤2000</p><h5 id="提示："><a href="#提示：" class="headerlink" title="提示："></a>提示：</h5><p>本题考查多重背包的二进制优化方法。</p><h4 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h4><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">4 </span><span class="hljs-number">5</span><br><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">3</span><br><span class="hljs-symbol">2 </span><span class="hljs-number">4</span> <span class="hljs-number">1</span><br><span class="hljs-symbol">3 </span><span class="hljs-number">4</span> <span class="hljs-number">3</span><br><span class="hljs-symbol">4 </span><span class="hljs-number">5</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">10<br></code></pre></td></tr></table></figure><h2 id="暴力解法："><a href="#暴力解法：" class="headerlink" title="暴力解法："></a>暴力解法：</h2><p>暴力动态规划（只能解决N较小的情况）：</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs inform7">#include&lt;bits/stdc++.h&gt;<br>using namespace std;<br><br>const int N=110;<br>int w<span class="hljs-comment">[N]</span>,v<span class="hljs-comment">[N]</span>,s<span class="hljs-comment">[N]</span>;<br>int n,m;<br>int dp<span class="hljs-comment">[N]</span><span class="hljs-comment">[N]</span>;<br><br>int main()<br>&#123;<br>    ios::sync_with_stdio(false);<br>    cin.tie(nullptr);<br>    cin&gt;&gt;n&gt;&gt;m;<br>    for(int i=1;i&lt;=n;i++)<br>    &#123;<br>        cin&gt;&gt;v<span class="hljs-comment">[i]</span>&gt;&gt;w<span class="hljs-comment">[i]</span>&gt;&gt;s<span class="hljs-comment">[i]</span>;<br>        for(int j=0;j&lt;=m;j++)<br>        &#123;<br>            for(int k=0;k&lt;=s<span class="hljs-comment">[i]</span>&amp;&amp;k*v<span class="hljs-comment">[i]</span>&lt;=j;k++)<br>            &#123;<br>                dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span>=max(dp<span class="hljs-comment">[i]</span><span class="hljs-comment">[j]</span>,dp<span class="hljs-comment">[i-1]</span><span class="hljs-comment">[j-v<span class="hljs-comment">[i]</span>*k]</span>+w<span class="hljs-comment">[i]</span>*k);<br>            &#125;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;dp<span class="hljs-comment">[n]</span><span class="hljs-comment">[m]</span>;<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="二进制优化："><a href="#二进制优化：" class="headerlink" title="二进制优化："></a>二进制优化：</h2><p>使用二进制优化将背包降至一维，利用倍增思想，将背包数量用二进制表示，如1+2+4+8+······，可以组成1~n之间的所有数，这样就将背包降至一维，将多重背包问题转换成01背包问题；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">12010</span>,M=<span class="hljs-number">2010</span>;  <span class="hljs-comment">//降至一维后，背包数量应开到(log(M)+1)*N</span><br><span class="hljs-type">int</span> v[N],w[N];<br><span class="hljs-type">int</span> dp[M];<br><span class="hljs-type">int</span> n,m;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>;<span class="hljs-comment">//二进制优化</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-type">int</span> a,b,s;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;s;<br><span class="hljs-type">int</span> k=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">while</span>(k&lt;s)<br>&#123;<br>cnt++;<br>v[cnt]=a*k;<br>w[cnt]=b*k;<br>s-=k;<br>k*=<span class="hljs-number">2</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(s&gt;<span class="hljs-number">0</span>)<br>&#123;<br>cnt++;<br>v[cnt]=a*s;<br>w[cnt]=b*s;<br>&#125;<br>&#125;<br>n=cnt;<br><br><span class="hljs-comment">//转换成01背包问题</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=m;j&gt;=v[i];j--)<br>&#123;<br>dp[j]=<span class="hljs-built_in">max</span>(dp[j],dp[j-v[i]]+w[i]);<br>&#125;<br>&#125;<br>cout&lt;&lt;dp[m];<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>educational_codeforces_r174</title>
    <link href="/2025/02/19/educational-codeforces-r174/"/>
    <url>/2025/02/19/educational-codeforces-r174/</url>
    
    <content type="html"><![CDATA[<p>educational codeforces round 174（div.2）</p><h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>找规律吗？找不到</p><h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>怎么判断没思路，怎么判断不相邻</p><h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>依次遍历每个元素（行不通）</p><h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>能看懂题目，但无从下手</p>]]></content>
    
    
    
    <tags>
      
      <tag>cf刷题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Codeforce-1005</title>
    <link href="/2025/02/16/Codeforce-1005/"/>
    <url>/2025/02/16/Codeforce-1005/</url>
    
    <content type="html"><![CDATA[<p>codeforces round 1005(Div.2)</p><p><a href="https://codeforces.com/contest/2064">https://codeforces.com/contest/2064</a></p><p><a href="https://codeforces.com/blog/entry/138912">https://codeforces.com/blog/entry/138912</a></p><h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p><del>采用模拟，a字符串从头遍历，找到第一个1，它和其后的字符串删除增加到b字符串后面；b数组从头遍历，找到第一个0；</del></p><p><del>应该使用数组比较简单；条件怎么判断</del></p><p>请注意，如果字符串 <em>s</em> 以字符 1 开头，那么在某个时刻，整个字符串 <em>s</em> 必须被移动到字符串 <em>t</em> 中。同时，如果执行操作，那么在两个字符串中，”01” 和 “10” 的出现次数最多只能减少一次。这给出了答案的上界，即 <em>s</em> 中 “01” 和 “10” 的出现次数，如果 <em>s</em> 以字符 1 开头，则在此基础上加 1。</p><p>接下来，以下构造方式使用的操作次数与上述上界相同（从而证明了这就是最小操作次数）：如果 <em>s</em> 以字符 1 开头，那么选择整个字符串 <em>s</em> 并将其移动到 <em>t</em> 中。然后，反复查找 <em>s</em> 或 <em>t</em> 中第一个与前一个字符不同的字符（注意在这种构造中，这样的索引一次只能存在于一个字符串中），并选择从这个字符开始的后缀，并将其移动到另一个字符串中。在这个构造过程中，<em>s</em> 的某个前缀将包含字符 0，而 <em>t</em> 的某个前缀将包含字符 1，因此每次移动后，”01” 和 “10” 的总数都会减少。</p><p>因此，这个问题的答案就是 <em>s</em> 中 “01” 和 “10” 的出现次数，如果 <em>s</em> 以字符 1 开头，则在此基础上加 1</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;\<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n;cin&gt;&gt;n;<br>string s;cin&gt;&gt;s;<br><span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(s[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;1&#x27;</span>) ans++;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n<span class="hljs-number">-1</span>;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(s[i]!=s[i<span class="hljs-number">+1</span>])<br>ans++;<br>&#125;<br>cout&lt;&lt;ans&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><span class="hljs-type">int</span> tt;cin&gt;&gt;tt;<br><span class="hljs-keyword">while</span>(tt--)<br>&#123;<br><span class="hljs-built_in">solve</span>();<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p><del>删除子数组使得相同数字尽可能多；条件怎么设置，没有思路</del></p><p>只删除一个数字，个数减1而不重复数字最多减1，不会使分数增加。所以要使分数增加，删除最长的不重复数字组成的子数组。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n;cin&gt;&gt;n;<br><br><span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">a</span><span class="hljs-params">(n)</span></span>;<span class="hljs-comment">//存储数组</span><br><span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">cnt</span><span class="hljs-params">(n)</span></span>;<span class="hljs-comment">//存储每个数字的出现次数</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>&#123;<br>cin&gt;&gt;a[i];<br>a[i]--;<span class="hljs-comment">//因为从数组下标0开始，数组数字范围为[1,n]，所以每个数字减1</span><br>cnt[a[i]]++;<br>&#125;<br><br><span class="hljs-type">int</span> l=<span class="hljs-number">0</span>,r=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> len=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(cnt[a[i]]&gt;<span class="hljs-number">1</span>)<br>&#123;<br>len=<span class="hljs-number">0</span>;<span class="hljs-comment">//遍历数组，遇到重复就清空len</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>len++;<br>&#125;<br><span class="hljs-keyword">if</span>(len&gt;r-l)<span class="hljs-comment">//如果当前子数组长度比之前找到的最大子数组长度大，更新子数组边界</span><br>&#123;<br>r=i<span class="hljs-number">+1</span>;<br>l=i<span class="hljs-number">+1</span>-len;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(l==r)<br>&#123;<br>cout&lt;&lt;<span class="hljs-number">0</span>&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>cout&lt;&lt;l<span class="hljs-number">+1</span>&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>&lt;&lt;r&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><span class="hljs-type">int</span> tt;cin&gt;&gt;tt;<br><span class="hljs-keyword">while</span>(tt--)<br>&#123;<br><span class="hljs-built_in">solve</span>();<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p><del>ai小于0删除后缀，大于0删除前缀</del></p><p><del>如果数组左边都是大于0的数，右边都是小于0的数，很好处理</del></p><p><del>但是左边小于0，右边大于0呢</del></p><p><del>进一步，分布没有规律，分成好多子数组怎么办</del></p><p>首先，要注意在任何情况下，我们应该要么移除最左边的正数，要么移除最右边的负数。因为如果我们选择一个不是最左边的正数，那么我们本可以先选择最左边的正数，从而获得更高的分数。对于选择最右边的负数，也有类似的论证。</p><p>现在，如果你执行这些操作若干次，你最终总是会取走一些正数的前缀，然后是剩余的负数的后缀。因此，为了计算答案，我们只需要检查所有 n+1 种将数组分割成前缀和后缀的方式，并取其中的最大值，这可以在 O(n) 时间内轻松完成。</p><p>遍历，计算前缀和和后缀和，相加即为当前位置的分数，选出最大值。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n;cin&gt;&gt;n;<br><br>vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">a</span>(n);<span class="hljs-comment">//存储数组</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) cin&gt;&gt;a[i];<br><br>vector&lt;<span class="hljs-type">long</span> <span class="hljs-type">long</span>&gt;<span class="hljs-built_in">pre</span>(n),<span class="hljs-built_in">suf</span>(n);<span class="hljs-comment">//分别存储前缀和数组，后缀和数组</span><br><br><span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]&gt;<span class="hljs-number">0</span>) pre[<span class="hljs-number">0</span>]=a[<span class="hljs-number">0</span>];<span class="hljs-comment">//求前缀和数组</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)<br>&#123;<br>pre[i]=pre[i<span class="hljs-number">-1</span>];<br><span class="hljs-keyword">if</span>(a[i]&gt;<span class="hljs-number">0</span>) pre[i]+=a[i];<br>&#125;<br><br><span class="hljs-keyword">if</span>(a[n<span class="hljs-number">-1</span>]&lt;<span class="hljs-number">0</span>) suf[n<span class="hljs-number">-1</span>]=-a[n<span class="hljs-number">-1</span>];<span class="hljs-comment">//求后缀和数组</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=n<span class="hljs-number">-2</span>;i&gt;=<span class="hljs-number">0</span>;i--)<br>&#123;<br>suf[i]=suf[i<span class="hljs-number">+1</span>];<br><span class="hljs-keyword">if</span>(a[i]&lt;<span class="hljs-number">0</span>) suf[i]-=a[i];<br>&#125;<br><br><span class="hljs-type">long</span> <span class="hljs-type">long</span> ans=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<span class="hljs-comment">//遍历寻找最大分数</span><br>&#123;<br>ans=<span class="hljs-built_in">max</span>(ans,pre[i]+suf[i]);<br>&#125;<br>cout&lt;&lt;ans&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><span class="hljs-type">int</span> tt;cin&gt;&gt;tt;<br><span class="hljs-keyword">while</span>(tt--)<br>&#123;<br><span class="hljs-built_in">solve</span>();<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>蒋大佬的代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n;cin&gt;&gt;n;<br><br>vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">a</span>(n);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) cin&gt;&gt;a[i];<br><br><span class="hljs-type">long</span> <span class="hljs-type">long</span> suf=<span class="hljs-number">0</span>;<span class="hljs-comment">//存储后缀和</span><br><span class="hljs-type">long</span> <span class="hljs-type">long</span> pre=<span class="hljs-number">0</span>;<span class="hljs-comment">//存储前缀和</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(a[i]&lt;<span class="hljs-number">0</span>)<br>&#123;<br>suf+=a[i];<span class="hljs-comment">//所有负数的和</span><br>&#125;<br>&#125;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> ans=-suf;<span class="hljs-comment">//初始情况下，假设所有负数都被移除</span><br><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<span class="hljs-comment">//动态计算前缀和 后缀和</span><br>&#123;<br><span class="hljs-keyword">if</span>(a[i]&lt;<span class="hljs-number">0</span>)<br>&#123;<br>suf-=a[i];<span class="hljs-comment">//剩余负数的和</span><br>&#125;<br><span class="hljs-keyword">else</span> <br>&#123;<br>pre+=a[i];<span class="hljs-comment">//正数前缀和</span><br>&#125;<br>ans=<span class="hljs-built_in">max</span>(ans,pre-suf);<br>&#125;<br>cout&lt;&lt;ans&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><span class="hljs-type">int</span> tt;cin&gt;&gt;tt;<br><span class="hljs-keyword">while</span>(tt--)<br>&#123;<br><span class="hljs-built_in">solve</span>();<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p><del>看起来很简单，只需要从后往前尝试遍历即可；忘记异或怎么操作了</del></p>]]></content>
    
    
    
    <tags>
      
      <tag>cf刷题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Codeforce_1004(Div2)</title>
    <link href="/2025/02/12/Codeforce-1004-Div2/"/>
    <url>/2025/02/12/Codeforce-1004-Div2/</url>
    
    <content type="html"><![CDATA[<p>1004（div 2）</p><p><a href="https://codeforces.com/contest/2067">https://codeforces.com/contest/2067</a></p><p><a href="https://codeforces.com/blog/entry/139415?locale=en">https://codeforces.com/blog/entry/139415?locale=en</a></p><h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>思路：<del>感觉找规律做。想半天规律，觉得a每一位都是9且b是1时，或者a最后一位不是9且b&#x3D;a+1时，为yes；其余为no。但显而易见错了。每位数字之和怎么算，唉</del></p><p><strong>如果n的各位数字相加末尾不是9（n是9的倍数时，各位相加数字结尾是9），那么s(n+1)&#x3D;s(n)+1。如果n各位数字之和末尾是9，需要加1后再减去9，因为9进位变成了0，s(n+1)&#x3D;s(n)+1-9k。可以归为一种情况，判断条件可以写为s(n)+1-s(n+1)%9&#x3D;&#x3D;0</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> x,y;cin&gt;&gt;x&gt;&gt;y;<br><span class="hljs-keyword">if</span>(x<span class="hljs-number">+1</span>&gt;=y&amp;&amp;(x<span class="hljs-number">+1</span>-y)%<span class="hljs-number">9</span>==<span class="hljs-number">0</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><span class="hljs-type">int</span> tt;cin&gt;&gt;tt;<br><span class="hljs-keyword">while</span>(tt--)<br>&#123;<br><span class="hljs-built_in">solve</span>();<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>思路：<del>仅能想到可以分成偶数组，每组都有偶数个，可以yes；分成两组，每组奇数个，no。唉，想不出来</del></p><p>对数组进行排序，第一个数放入第二个袋子后，第二个袋子中的数不能再进行改变，所以放入第二个袋子后，第一个袋子中要有一个相同的数字，被锁住，不能再对它进行操作，如果第二个数字和第一个数字不相等，直接错误。</p><p>第一步操作只能选1，将排序后最小的第一个数放入第二个袋子，后面的数可以选两种操作。还是两个数字分成一组进行操作，如果不相等，看是否可以进行操作二，相等就进行操作1，直到遍历一遍。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n;cin&gt;&gt;n;<br>vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">a</span>(n);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) cin&gt;&gt;a[i];<br><span class="hljs-built_in">sort</span>(a.<span class="hljs-built_in">begin</span>(),a.<span class="hljs-built_in">end</span>());<br><span class="hljs-type">int</span> mx=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i+=<span class="hljs-number">2</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">max</span>(mx,a[i])!=<span class="hljs-built_in">max</span>(mx,a[i<span class="hljs-number">+1</span>]))<br>&#123;<br>cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>mx=<span class="hljs-built_in">max</span>(mx,a[i])<span class="hljs-number">+1</span>;<br>&#125;<br>&#125;<br>cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><span class="hljs-type">int</span> tt;cin&gt;&gt;tt;<br><span class="hljs-keyword">while</span>(tt--)<br>&#123;<br><span class="hljs-built_in">solve</span>();<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>思路: <del>每次加9肯定能得到一个含7的。第一次每次加9，直到含7；第二次每次加99；第三次每次加999；直到等于位数</del></p><p><del>想个垃圾代码还错了</del></p><p>只看每位数字，每位数字在加9次9之后都会完成一次从1到9的循环，其中一定会出现7。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n;cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> l=<span class="hljs-number">0</span>;l&lt;=<span class="hljs-number">9</span>;l++)<br>&#123;<br>string s=<span class="hljs-built_in">to_string</span>(n-l);<br><span class="hljs-type">int</span> md=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> c:s)<br>&#123;<br><span class="hljs-keyword">if</span>(c&lt;<span class="hljs-string">&#x27;7&#x27;</span>)<br>&#123;<br>md=<span class="hljs-built_in">max</span>(md,c-<span class="hljs-string">&#x27;0&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>(l&gt;=<span class="hljs-number">7</span>-md)<br>&#123;<br>cout&lt;&lt;l&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><span class="hljs-type">int</span> tt;cin&gt;&gt;tt;<br><span class="hljs-keyword">while</span>(tt--)<br>&#123;<br><span class="hljs-built_in">solve</span>();<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p><del>思路：完全没思路</del></p>]]></content>
    
    
    
    <tags>
      
      <tag>cf刷题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2025/02/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2025/02/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>这是一篇测试文章</p><p><img src="/2025/02/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/20220521232048_5fc97.png" alt="haha"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/02/11/hello-world/"/>
    <url>/2025/02/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
